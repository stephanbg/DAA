# Algoritmo de inserciÃ³n

    LOAD =1       # Cargo contador del for (j) en R0
    READ 1        # R1 [0] = primer elemento de la cinta
for:
    STORE 2          # R2 = j
    LOAD 1           # R0 = elemento de cinta
    JZERO fin_for  
    LOAD 2           # R0 = j
    READ 1[0]        # R0 me dice la columna de R1 donde guardo el siguiente elemento de la cinta
    SUB =1           # R0 = i

    while:  
        JZERO continue
        JUMP fin_while
        continue:
        STORE 3          # R3 = i
        LOAD 1[2]        # R0 = elemento j de R1
        SUB 1[3]         # R0 = R1[j] - R1[i]
        JGTZ fin_while   # Si es > 0 salir
        JZERO fin_while  # Si es = 0 salir  
        LOAD 3           # R0 = i
        STORE 4          # R4 = i + 1
        STORE 1[4]       # R1[i + 1] = R1[i]
        SUB =1           # R0 = i - 1
        JUMP while

    fin_while:
    LOAD 3  # R0 = i
    ADD =1  # R0 = i + 1
    STORE 3 # R3 = R0
    LOAD 1[2]        # R0 = elemento j de R1
    STORE 1[3]       # R1[i + 1] = key
    LOAD 2           # R0 = j
    ADD =1        # j = j + 1
    JUMP for

fin_for:
    #LOAD 2 # R0 = j
    #ADD =1 # R0 = j + 1
    #STORE 2 # R2 = j + 1
    #LOAD =0 # R0 = 0
    #STORE 1[2] # R1[size] = 0

    escribiendo:
       # STORE 2  # R2 = i (empieza en 0)
       # LOAD 1[0] # R0 = cada elemento
       ## JZERO fin_escribiendo
       # LOAD 2  # R0 = i
       # WRITE 1[0] # Escribir en la cinta el resultado R1
       # ADD =1
       # JUMP escribiendo

    fin_escribiendo:
    HALT